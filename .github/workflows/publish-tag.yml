name: Publish Tag

on:
  push:
    tags:
      - v*.*.* # Push events to v1.0.0, ...

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: node_${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node_${{ matrix.node-version }}-

      - name: Install Dependencies
        run: npm ci

      # - name: Publish to npmjs
      #   run: |
      #     npm build
      #     npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Extract changelog
        run: | 
          cat $GITHUB_ENV
          VERSION="$(npm run --silent getVersion)"
          echo "$VERSION"
          cat CHANGELOG.md | sed -n "/${VERSION}/,/## /p" | sed -e '$ d'
          CHANGELOG="$(cat CHANGELOG.md | sed -n "/${VERSION}/,/## /p" | sed -e '$ d')"
          echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV
          echo "$CHANGELOG"
          echo "${CHANGELOG}"
          cat $env:GITHUB_ENV

      - name: Read changelog
        run: | 
          npm run --silent getVersion

      # - name: Create Github Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     # body: ${ CHANGELOG }
      #     draft: true
      #     prerelease: false